{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JERRY\\\\Documents\\\\myapp\\\\telegram-mini-app\\\\frontend\\\\src\\\\components\\\\MissionTab.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CelebrationAnimation from './CelebrationAnimation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Mock API function to generate random questions\nconst generateRandomQuestion = () => {\n  const questions = [{\n    question: \"What is the main purpose of blockchain technology?\",\n    answers: [\"To create digital currencies\", \"To provide decentralized and secure record-keeping\", \"To speed up internet connections\", \"To encrypt emails\"],\n    correctAnswer: 1\n  }, {\n    question: \"What is a smart contract?\",\n    answers: [\"A legally binding document\", \"An AI-powered agreement\", \"Self-executing code on a blockchain\", \"A contract written by a lawyer\"],\n    correctAnswer: 2\n  }, {\n    question: \"What is the purpose of mining in cryptocurrency networks?\",\n    answers: [\"To create new coins\", \"To validate and process transactions\", \"To increase the value of the currency\", \"Both A and B\"],\n    correctAnswer: 3\n  }];\n  return questions[Math.floor(Math.random() * questions.length)];\n};\nconst MissionTab = ({\n  updateTONBalance,\n  updateQuizEarnings\n}) => {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [result, setResult] = useState(null);\n  const [showCelebration, setShowCelebration] = useState(false);\n  const [quizEarnings, setQuizEarnings] = useState(0);\n  const loadNewQuestion = () => {\n    setCurrentQuestion(generateRandomQuestion());\n    setSelectedAnswer(null);\n    setResult(null);\n  };\n  useEffect(() => {\n    loadNewQuestion();\n\n    // Set up a timer to load a new question every 24 hours\n    const timer = setInterval(loadNewQuestion, 24 * 60 * 60 * 1000);\n    return () => clearInterval(timer);\n  }, []);\n  const handleAnswerSelection = index => {\n    setSelectedAnswer(index);\n  };\n  const handleSubmit = () => {\n    if (selectedAnswer === null || !currentQuestion) return;\n    if (selectedAnswer === currentQuestion.correctAnswer) {\n      const reward = 0.1; // 0.1 TON reward for correct answer\n      setResult(`Correct! You earned ${reward} TON.`);\n      updateTONBalance(reward);\n      updateQuizEarnings(reward);\n      setQuizEarnings(prevEarnings => prevEarnings + reward);\n      setShowCelebration(true);\n\n      // Set a timeout to hide the celebration, show the result, and then load a new question\n      setTimeout(() => {\n        setShowCelebration(false);\n        setTimeout(() => {\n          loadNewQuestion();\n        }, 1500); // Wait 1.5 seconds after hiding celebration before loading new question\n      }, 3000); // Celebration lasts for 3 seconds\n    } else {\n      setResult(`Incorrect. The correct answer was: ${currentQuestion.answers[currentQuestion.correctAnswer]}`);\n      // Load new question after 3 seconds for incorrect answers\n      setTimeout(loadNewQuestion, 3000);\n    }\n  };\n  if (!currentQuestion) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-gray-900 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4 text-white\",\n      children: \"Daily Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 text-yellow-400\",\n      children: [\"Quiz Earnings: \", quizEarnings.toFixed(2), \" TON\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-800 p-4 rounded-lg mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl mb-2 text-white\",\n        children: currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), currentQuestion.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswerSelection(index),\n        className: `block w-full text-left p-2 mb-2 rounded ${selectedAnswer === index ? 'bg-blue-600' : 'bg-gray-700'} text-white`,\n        children: answer\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: selectedAnswer === null,\n      className: `w-full p-2 rounded ${selectedAnswer === null ? 'bg-gray-600' : 'bg-green-600'} text-white`,\n      children: \"Submit Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `mt-4 p-2 rounded ${result.startsWith('Correct') ? 'bg-green-700' : 'bg-red-700'} text-white`,\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this), showCelebration && /*#__PURE__*/_jsxDEV(CelebrationAnimation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(MissionTab, \"RrS3cYebli0FJF168sP4j4CCV7Q=\");\n_c = MissionTab;\nexport default MissionTab;\nvar _c;\n$RefreshReg$(_c, \"MissionTab\");","map":{"version":3,"names":["React","useState","useEffect","CelebrationAnimation","jsxDEV","_jsxDEV","generateRandomQuestion","questions","question","answers","correctAnswer","Math","floor","random","length","MissionTab","updateTONBalance","updateQuizEarnings","_s","currentQuestion","setCurrentQuestion","selectedAnswer","setSelectedAnswer","result","setResult","showCelebration","setShowCelebration","quizEarnings","setQuizEarnings","loadNewQuestion","timer","setInterval","clearInterval","handleAnswerSelection","index","handleSubmit","reward","prevEarnings","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","toFixed","map","answer","onClick","disabled","startsWith","_c","$RefreshReg$"],"sources":["C:/Users/JERRY/Documents/myapp/telegram-mini-app/frontend/src/components/MissionTab.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CelebrationAnimation from './CelebrationAnimation';\n\ninterface Question {\n  question: string;\n  answers: string[];\n  correctAnswer: number;\n}\n\ninterface MissionTabProps {\n  updateTONBalance: (amount: number) => void;\n  updateQuizEarnings: (amount: number) => void;\n}\n\n// Mock API function to generate random questions\nconst generateRandomQuestion = (): Question => {\n  const questions = [\n    {\n      question: \"What is the main purpose of blockchain technology?\",\n      answers: [\n        \"To create digital currencies\",\n        \"To provide decentralized and secure record-keeping\",\n        \"To speed up internet connections\",\n        \"To encrypt emails\"\n      ],\n      correctAnswer: 1\n    },\n    {\n      question: \"What is a smart contract?\",\n      answers: [\n        \"A legally binding document\",\n        \"An AI-powered agreement\",\n        \"Self-executing code on a blockchain\",\n        \"A contract written by a lawyer\"\n      ],\n      correctAnswer: 2\n    },\n    {\n      question: \"What is the purpose of mining in cryptocurrency networks?\",\n      answers: [\n        \"To create new coins\",\n        \"To validate and process transactions\",\n        \"To increase the value of the currency\",\n        \"Both A and B\"\n      ],\n      correctAnswer: 3\n    }\n  ];\n  return questions[Math.floor(Math.random() * questions.length)];\n};\n\nconst MissionTab: React.FC<MissionTabProps> = ({ updateTONBalance, updateQuizEarnings }) => {\n  const [currentQuestion, setCurrentQuestion] = useState<Question | null>(null);\n  const [selectedAnswer, setSelectedAnswer] = useState<number | null>(null);\n  const [result, setResult] = useState<string | null>(null);\n  const [showCelebration, setShowCelebration] = useState(false);\n  const [quizEarnings, setQuizEarnings] = useState<number>(0);\n\n  const loadNewQuestion = () => {\n    setCurrentQuestion(generateRandomQuestion());\n    setSelectedAnswer(null);\n    setResult(null);\n  };\n\n  useEffect(() => {\n    loadNewQuestion();\n\n    // Set up a timer to load a new question every 24 hours\n    const timer = setInterval(loadNewQuestion, 24 * 60 * 60 * 1000);\n\n    return () => clearInterval(timer);\n  }, []);\n\n  const handleAnswerSelection = (index: number) => {\n    setSelectedAnswer(index);\n  };\n\n  const handleSubmit = () => {\n    if (selectedAnswer === null || !currentQuestion) return;\n\n    if (selectedAnswer === currentQuestion.correctAnswer) {\n      const reward = 0.1; // 0.1 TON reward for correct answer\n      setResult(`Correct! You earned ${reward} TON.`);\n      updateTONBalance(reward);\n      updateQuizEarnings(reward);\n      setQuizEarnings(prevEarnings => prevEarnings + reward);\n      setShowCelebration(true);\n      \n      // Set a timeout to hide the celebration, show the result, and then load a new question\n      setTimeout(() => {\n        setShowCelebration(false);\n        setTimeout(() => {\n          loadNewQuestion();\n        }, 1500); // Wait 1.5 seconds after hiding celebration before loading new question\n      }, 3000); // Celebration lasts for 3 seconds\n    } else {\n      setResult(`Incorrect. The correct answer was: ${currentQuestion.answers[currentQuestion.correctAnswer]}`);\n      // Load new question after 3 seconds for incorrect answers\n      setTimeout(loadNewQuestion, 3000);\n    }\n  };\n\n  if (!currentQuestion) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"p-4 bg-gray-900 min-h-screen\">\n      <h2 className=\"text-2xl font-bold mb-4 text-white\">Daily Quiz</h2>\n      <div className=\"mb-4 text-yellow-400\">Quiz Earnings: {quizEarnings.toFixed(2)} TON</div>\n      <div className=\"bg-gray-800 p-4 rounded-lg mb-4\">\n        <h3 className=\"text-xl mb-2 text-white\">{currentQuestion.question}</h3>\n        {currentQuestion.answers.map((answer, index) => (\n          <button\n            key={index}\n            onClick={() => handleAnswerSelection(index)}\n            className={`block w-full text-left p-2 mb-2 rounded ${\n              selectedAnswer === index ? 'bg-blue-600' : 'bg-gray-700'\n            } text-white`}\n          >\n            {answer}\n          </button>\n        ))}\n      </div>\n      <button\n        onClick={handleSubmit}\n        disabled={selectedAnswer === null}\n        className={`w-full p-2 rounded ${\n          selectedAnswer === null ? 'bg-gray-600' : 'bg-green-600'\n        } text-white`}\n      >\n        Submit Answer\n      </button>\n      {result && (\n        <div className={`mt-4 p-2 rounded ${\n          result.startsWith('Correct') ? 'bg-green-700' : 'bg-red-700'\n        } text-white`}>\n          {result}\n        </div>\n      )}\n      {showCelebration && <CelebrationAnimation />}\n    </div>\n  );\n};\n\nexport default MissionTab;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}