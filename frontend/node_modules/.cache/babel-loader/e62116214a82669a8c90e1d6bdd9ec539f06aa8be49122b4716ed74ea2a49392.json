{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JERRY\\\\Documents\\\\myapp\\\\telegram-mini-app\\\\frontend\\\\src\\\\components\\\\MissionTab.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Mock API function to generate random questions\nconst generateRandomQuestion = () => {\n  const questions = [{\n    question: \"What is the main purpose of blockchain technology?\",\n    answers: [\"To create digital currencies\", \"To provide decentralized and secure record-keeping\", \"To speed up internet connections\", \"To encrypt emails\"],\n    correctAnswer: 1\n  }, {\n    question: \"What is a smart contract?\",\n    answers: [\"A legally binding document\", \"An AI-powered agreement\", \"Self-executing code on a blockchain\", \"A contract written by a lawyer\"],\n    correctAnswer: 2\n  }, {\n    question: \"What is the purpose of mining in cryptocurrency networks?\",\n    answers: [\"To create new coins\", \"To validate and process transactions\", \"To increase the value of the currency\", \"Both A and B\"],\n    correctAnswer: 3\n  }];\n  return questions[Math.floor(Math.random() * questions.length)];\n};\nconst MissionTab = () => {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [result, setResult] = useState(null);\n  const [totalPoints, setTotalPoints] = useState(0);\n  useEffect(() => {\n    // Load a new question daily\n    const loadNewQuestion = () => {\n      setCurrentQuestion(generateRandomQuestion());\n      setSelectedAnswer(null);\n      setResult(null);\n    };\n    loadNewQuestion();\n\n    // Set up a timer to load a new question every 24 hours\n    const timer = setInterval(loadNewQuestion, 24 * 60 * 60 * 1000);\n    return () => clearInterval(timer);\n  }, []);\n  const handleAnswerSelection = index => {\n    setSelectedAnswer(index);\n  };\n  const handleSubmit = () => {\n    if (selectedAnswer === null || !currentQuestion) return;\n    if (selectedAnswer === currentQuestion.correctAnswer) {\n      setResult('Correct! You earned 10 points.');\n      setTotalPoints(prevPoints => prevPoints + 10);\n    } else {\n      setResult(`Incorrect. The correct answer was: ${currentQuestion.answers[currentQuestion.correctAnswer]}`);\n    }\n  };\n  if (!currentQuestion) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-gray-900 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4 text-white\",\n      children: \"Daily Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 text-yellow-400\",\n      children: [\"Total Points: \", totalPoints]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-800 p-4 rounded-lg mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl mb-2 text-white\",\n        children: currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), currentQuestion.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswerSelection(index),\n        className: `block w-full text-left p-2 mb-2 rounded ${selectedAnswer === index ? 'bg-blue-600' : 'bg-gray-700'} text-white`,\n        children: answer\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: selectedAnswer === null,\n      className: `w-full p-2 rounded ${selectedAnswer === null ? 'bg-gray-600' : 'bg-green-600'} text-white`,\n      children: \"Submit Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `mt-4 p-2 rounded ${result.startsWith('Correct') ? 'bg-green-700' : 'bg-red-700'} text-white`,\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(MissionTab, \"nLy2WIRVRrj/IsF3DaZ3O6NajZ8=\");\n_c = MissionTab;\nexport default MissionTab;\nvar _c;\n$RefreshReg$(_c, \"MissionTab\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","generateRandomQuestion","questions","question","answers","correctAnswer","Math","floor","random","length","MissionTab","_s","currentQuestion","setCurrentQuestion","selectedAnswer","setSelectedAnswer","result","setResult","totalPoints","setTotalPoints","loadNewQuestion","timer","setInterval","clearInterval","handleAnswerSelection","index","handleSubmit","prevPoints","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","answer","onClick","disabled","startsWith","_c","$RefreshReg$"],"sources":["C:/Users/JERRY/Documents/myapp/telegram-mini-app/frontend/src/components/MissionTab.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\ninterface Question {\n  question: string;\n  answers: string[];\n  correctAnswer: number;\n}\n\n// Mock API function to generate random questions\nconst generateRandomQuestion = (): Question => {\n  const questions = [\n    {\n      question: \"What is the main purpose of blockchain technology?\",\n      answers: [\n        \"To create digital currencies\",\n        \"To provide decentralized and secure record-keeping\",\n        \"To speed up internet connections\",\n        \"To encrypt emails\"\n      ],\n      correctAnswer: 1\n    },\n    {\n      question: \"What is a smart contract?\",\n      answers: [\n        \"A legally binding document\",\n        \"An AI-powered agreement\",\n        \"Self-executing code on a blockchain\",\n        \"A contract written by a lawyer\"\n      ],\n      correctAnswer: 2\n    },\n    {\n      question: \"What is the purpose of mining in cryptocurrency networks?\",\n      answers: [\n        \"To create new coins\",\n        \"To validate and process transactions\",\n        \"To increase the value of the currency\",\n        \"Both A and B\"\n      ],\n      correctAnswer: 3\n    }\n  ];\n  return questions[Math.floor(Math.random() * questions.length)];\n};\n\nconst MissionTab: React.FC = () => {\n  const [currentQuestion, setCurrentQuestion] = useState<Question | null>(null);\n  const [selectedAnswer, setSelectedAnswer] = useState<number | null>(null);\n  const [result, setResult] = useState<string | null>(null);\n  const [totalPoints, setTotalPoints] = useState<number>(0);\n\n  useEffect(() => {\n    // Load a new question daily\n    const loadNewQuestion = () => {\n      setCurrentQuestion(generateRandomQuestion());\n      setSelectedAnswer(null);\n      setResult(null);\n    };\n\n    loadNewQuestion();\n\n    // Set up a timer to load a new question every 24 hours\n    const timer = setInterval(loadNewQuestion, 24 * 60 * 60 * 1000);\n\n    return () => clearInterval(timer);\n  }, []);\n\n  const handleAnswerSelection = (index: number) => {\n    setSelectedAnswer(index);\n  };\n\n  const handleSubmit = () => {\n    if (selectedAnswer === null || !currentQuestion) return;\n\n    if (selectedAnswer === currentQuestion.correctAnswer) {\n      setResult('Correct! You earned 10 points.');\n      setTotalPoints(prevPoints => prevPoints + 10);\n    } else {\n      setResult(`Incorrect. The correct answer was: ${currentQuestion.answers[currentQuestion.correctAnswer]}`);\n    }\n  };\n\n  if (!currentQuestion) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"p-4 bg-gray-900 min-h-screen\">\n      <h2 className=\"text-2xl font-bold mb-4 text-white\">Daily Quiz</h2>\n      <div className=\"mb-4 text-yellow-400\">Total Points: {totalPoints}</div>\n      <div className=\"bg-gray-800 p-4 rounded-lg mb-4\">\n        <h3 className=\"text-xl mb-2 text-white\">{currentQuestion.question}</h3>\n        {currentQuestion.answers.map((answer, index) => (\n          <button\n            key={index}\n            onClick={() => handleAnswerSelection(index)}\n            className={`block w-full text-left p-2 mb-2 rounded ${\n              selectedAnswer === index ? 'bg-blue-600' : 'bg-gray-700'\n            } text-white`}\n          >\n            {answer}\n          </button>\n        ))}\n      </div>\n      <button\n        onClick={handleSubmit}\n        disabled={selectedAnswer === null}\n        className={`w-full p-2 rounded ${\n          selectedAnswer === null ? 'bg-gray-600' : 'bg-green-600'\n        } text-white`}\n      >\n        Submit Answer\n      </button>\n      {result && (\n        <div className={`mt-4 p-2 rounded ${\n          result.startsWith('Correct') ? 'bg-green-700' : 'bg-red-700'\n        } text-white`}>\n          {result}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MissionTab;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}